<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  эффект тени для всех нестандартных окон  -->
    <DropShadowEffect x:Key="WindowDropShadowEffectKey"
                      BlurRadius="10"
                      Opacity="1.7"
                      ShadowDepth="0" />

    <DropShadowEffect x:Key="HeaderShadowLoginForm"
                      BlurRadius="10"
                      Direction="0"
                      Opacity="1.7"
                      ShadowDepth="0" />

    <!--  #42464f  -->
    <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#42464f" />-->

    <!--<Style x:Key="myListboxStyle">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#2c323d" />
        </Style.Resources>
    </Style>-->

    <Style x:Key="ListBoxItem"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True">
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid x:Name="grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*">
                            </RowDefinition>
                            <RowDefinition Height="Auto">
                            </RowDefinition>
                        </Grid.RowDefinitions>
                        <Border x:Name="hover"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                BorderThickness="1"
                                CornerRadius="0"
                                Visibility="Collapsed">
                            <Border.Background>
                                <SolidColorBrush Opacity="0.1"
                                                 Color="#99E7E7E7" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.3"
                                                 Color="#99E7E7E7" />
                            </Border.BorderBrush>
                        </Border>
                        <Border x:Name="highlight"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="#991869F5"
                                BorderBrush="#990572E2"
                                BorderThickness="1"
                                CornerRadius="0"
                                Opacity="0.3"
                                Visibility="Collapsed">
                        </Border>
                        <ContentPresenter>
                        </ContentPresenter>
                        <Border Grid.Row="1"
                                Height="1"
                                BorderThickness="1">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.7"
                                                 Color="#99446E99" />
                            </Border.BorderBrush>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hover" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="highlight" Property="Visibility" Value="Visible" />
                            <Setter Property="Opacity" Value="1.3" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="Opacity" Value="0.7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="1.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="0.7" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <ImageBrush x:Key="ItemNormalBrush"
                ImageSource="pack://application:,,,/Resources/itemBtn_normal.png" />
    <ImageBrush x:Key="ItemHoverBrush"
                ImageSource="pack://application:,,,/Resources/itemBtn_hover.png" />

    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border"
                                Margin="0,0,0,13"
                                Background="Transparent">
                            <!--  BorderBrush="#FF14567C"  -->
                            <ContentPresenter x:Name="ContentSite"
                                              Margin="9"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              ContentSource="Header" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ItemNormalBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>

                        <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ItemHoverBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF3E4D61" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingsTabItem"
           TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border"
                                Margin="0,0,0,13"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="1,1,1,1">
                            <ContentPresenter x:Name="ContentSite"
                                              Margin="9"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              ContentSource="Header" />
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabItemText"
           TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected,
                                           RelativeSource={RelativeSource AncestorType=TabItem}}"
                         Value="True">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected,
                                           RelativeSource={RelativeSource AncestorType=TabItem}}"
                         Value="False">
                <Setter Property="Foreground" Value="#FFCDCDCD" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="InputBackgroundFocused"
                     Color="Orange">
    </SolidColorBrush>

    <Style x:Key="CheckBoxFocusVisualStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="0,0,4,3"
                            Background="Transparent"
                            BorderThickness="2"
                            CornerRadius="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Fill Brushes  -->

    <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FF0B5E81" />
                <GradientStop Offset="1.0" Color="#FF1788BB" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFF" />
                <GradientStop Offset="1.0" Color="#CCC" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFF" />
                <GradientStop Offset="1.0" Color="#EEE" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FFF" />
                <GradientStop Offset="1.0" Color="#EEE" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FF101D2E" />
                <GradientStop Offset="1.0" Color="#FF101D2E" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FF080D13" />
                <GradientStop Offset="1.0" Color="#FF080D13" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush"
                     Color="#EEE" />

    <SolidColorBrush x:Key="WindowBackgroundBrush"
                     Color="#FFF" />

    <SolidColorBrush x:Key="SelectedBackgroundBrush"
                     Color="#DDD" />

    <!--  Border Brushes  -->

    <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FF7E7E7E" />
                <GradientStop Offset="1.0" Color="#FF7E7E7E" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#CCC" />
                <GradientStop Offset="1.0" Color="#444" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FF7E7E7E" />
                <GradientStop Offset="1.0" Color="#FF7E7E7E" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0.0" Color="#FF7E7E7E" />
                <GradientStop Offset="1.0" Color="#FF7E7E7E" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledBorderBrush"
                     Color="#AAA" />

    <SolidColorBrush x:Key="SolidBorderBrush"
                     Color="#888" />

    <SolidColorBrush x:Key="LightBorderBrush"
                     Color="#AAA" />

    <!--  Miscellaneous Brushes  -->
    <SolidColorBrush x:Key="GlyphBrush"
                     Color="#FFD4F5FF" />

    <SolidColorBrush x:Key="LightColorBrush"
                     Color="#DDD" />

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisualStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="17"
                                    Height="17"
                                    Background="{StaticResource NormalBrush}"
                                    BorderBrush="#3f434b"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                <Path x:Name="CheckMark"
                                      Width="11"
                                      Height="11"
                                      Data="M 2,4 C 2,4 3,5 5,13 C 5,13 5,3 12,0"
                                      SnapsToDevicePixels="False"
                                      Stroke="{StaticResource GlyphBrush}"
                                      StrokeThickness="2" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#555960" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}" />
                            <Setter TargetName="CheckMark" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1.0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="TextBoxStyle"
           x:Name="myTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#121922" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="#FF2D353F">
        </Setter>
        <Setter Property="FlowDirection" Value="LeftToRight">
        </Setter>
        <Setter Property="Foreground" Value="#535558" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2,2,2,2">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness">
            <Setter.Value>
                <Thickness Bottom="1"
                           Left="1"
                           Right="1"
                           Top="1">
                </Thickness>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#1e5f99" />
                <Setter Property="Background" Value="#0f1217" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#4c5159" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="TextBoxStyle"
           x:Name="myTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#FFFDFDFD" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="#FF2D353F">
        </Setter>
        <Setter Property="FlowDirection" Value="LeftToRight">
        </Setter>
        <Setter Property="Foreground" Value="#535558" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2,2,2,2">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFFDFDFD" Opacity="0.7" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness">
            <Setter.Value>
                <Thickness Bottom="1"
                           Left="1"
                           Right="1"
                           Top="1">
                </Thickness>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#00c7ff" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFDFDFD" Opacity="0.7" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#4c5159" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PasswordBoxStyle"
           x:Name="myPasswordBox"
           TargetType="{x:Type PasswordBox}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="BorderBrush" Value="#FF2D353F">
        </Setter>
        <Setter Property="FlowDirection" Value="LeftToRight">
        </Setter>
        <Setter Property="Foreground" Value="#535558" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2,2,2,2">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="100" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness">
            <Setter.Value>
                <Thickness Bottom="1"
                           Left="1"
                           Right="1"
                           Top="1">
                </Thickness>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="#00c7ff" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFDFDFD" Opacity="0.7" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="#4c5159" />
                <Setter Property="Foreground" Value="#fff" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="BodyBackgroundBrush"
                     Color="#FF1A2532" />
    <SolidColorBrush x:Key="DataGridMouseHoverColor"
                     Color="#323945" />

    <Style x:Key="Cm"
           TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Foreground" Value="#b3b3b3" />
        <Setter Property="HorizontalOffset" Value="0" />
        <Setter Property="VerticalOffset" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Name="Border"
                            Background="{StaticResource BodyBackgroundBrush}"
                            BorderBrush="#FF233F56"
                            BorderThickness="1"
                            CornerRadius="2">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="3"
                                                      Opacity="0.7"
                                                      ShadowDepth="3"
                                                      Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Image Width="240"
                           Height="1"
                           Source="pack://application:,,,/Resources/separator.png"
                           Stretch="Fill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  <ControlTemplate x:Key="contextMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Grid>
            <Polygon Points="0,0 200,0 200,30 0,30" Opacity="0" x:Name="HoverBorder" Fill="#323945" />
            <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Opacity" Value="1" TargetName="HoverBorder" />
                <Setter Property="Foreground" Value="#ffffff" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>-->

    <Style x:Key="MenuItem"
           TargetType="MenuItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#ffffff" />
            </Trigger>

            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="#323945" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimpleComboBoxItem"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Pink" />
        <Setter Property="Foreground" Value="Purple" />
    </Style>

    <Style x:Key="Triggers"
           TargetType="{x:Type ComboBoxItem}">
        <Style.Triggers>
            <Trigger Property="ComboBoxItem.IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontFamily" Value="Arial Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border"
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="Transparent"
                  BorderBrush="Transparent"
                  BorderThickness="0" />
            <Path
                  x:Name="Arrow"
                  Fill="White"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" StrokeThickness="3" />
        </Grid>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888" />
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>-->

            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" To="0.5" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Template="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">

                                <Border
                                x:Name="DropDownBorder"
                                Background="#FF1A2532"

                                BorderThickness="1"
                                BorderBrush="#FF233F56" Opacity="0.9">
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true" HorizontalAlignment="Center">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FF4F4F4F" Opacity="0.5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>